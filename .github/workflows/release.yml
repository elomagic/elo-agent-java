name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - name: Checking out project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Cache Maven repository
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setting up JDK 8
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Setting up Maven server settings
        uses: s4u/maven-settings-action@64e42c454dbd42ef6370ac8539685755aedd205b # v3.1.0
        with:
          servers: |
            [{
              "id": "nvd",
              "username": "john.doe",
              "password": "${{ secrets.NVD_KEY }}"
            }]          

      - name: Extracting version from POM
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          VERSION=${VERSION%-SNAPSHOT}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setting up Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Setting release version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn versions:set -DnewVersion=${{ env.VERSION }}
          git commit -am "Release version set"
          git push origin main 

      - name: Building with Maven
        run: mvn -B package --file pom.xml

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a v${{ env.VERSION }} -m "Release v${{ env.VERSION }}"
          git push origin v${{ env.VERSION }}

      - name: Increasing minor version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.VERSION }}"
          minor=$((minor + 1))
          
          mvn versions:set -DnewVersion="${major}.${minor}.0-SNAPSHOT"
          git commit -am "Next SNAPSHOT version set"
          git push origin main
        shell: bash

      - name: Upload released assets
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: false
          files: |
            target/elo-agent-java-*.*   
